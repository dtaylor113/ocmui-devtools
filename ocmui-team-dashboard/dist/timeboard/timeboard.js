let members=[];const $rows=document.getElementById("timeboard-rows"),$q=document.getElementById("timeboard-q"),$footNote=document.getElementById("timeboard-footNote"),$refHour=document.getElementById("timeboard-refHour"),$refTz=document.getElementById("timeboard-refTz");async function loadMembers(){try{const e=localStorage.getItem("ocmui_timeboard_members");if(e){const t=JSON.parse(e);if(t&&t.length>0)return members=t,void console.log(`🕐 Loaded ${members.length} team members from localStorage`)}const t=await fetch("/timeboard/members.json");if(!t.ok)throw new Error(`HTTP ${t.status}`);members=await t.json(),console.log(`🕐 Loaded ${members.length} team members from JSON`)}catch(e){console.error("🕐 Failed to load members:",e),members=[]}}async function saveMembers(){try{localStorage.setItem("ocmui_timeboard_members",JSON.stringify(members)),console.log(`🕐 Saved ${members.length} team members to localStorage`)}catch(e){console.error("🕐 Failed to save members:",e)}}function uniqueTzs(){return[...new Set(members.map(e=>e.tz))].sort()}function fmtTime(e,t){return new Intl.DateTimeFormat("en-US",{timeZone:t,hour:"numeric",minute:"2-digit",hour12:!0}).format(e)}function fmtOffset(e,t){try{const n=new Intl.DateTimeFormat("en-US",{timeZone:t,timeZoneName:"shortOffset"}).formatToParts(e),r=n.find(e=>"timeZoneName"===e.type)?.value;if(r)return r}catch{}return""}function ymdInTz(e,t){const n=new Intl.DateTimeFormat("en-CA",{timeZone:t,year:"numeric",month:"2-digit",day:"2-digit"}).formatToParts(e);return{y:Number(n.find(e=>"year"===e.type).value),m:Number(n.find(e=>"month"===e.type).value),d:Number(n.find(e=>"day"===e.type).value)}}function parseGmt(e){const t=/GMT([+-])(\d{1,2})(?::?(\d{2}))?/.exec(e||"");return t?("-"===t[1]?-1:1)*(60*Number(t[2]||0)+Number(t[3]||0)):0}function referenceDate(){if("ref"!==currentMode())return new Date;const e=$refTz.value,t=Number($refHour.value),n=new Date,{y:r,m:o,d:m}=ymdInTz(n,e),a=new Intl.DateTimeFormat("en-US",{timeZone:e,timeZoneName:"shortOffset"}).formatToParts(n),i=60*t-parseGmt(a.find(e=>"timeZoneName"===e.type)?.value||"GMT+0"),d=Math.floor(i/60),l=i%60;return new Date(Date.UTC(r,o-1,m,d,l,0,0))}function minutesSinceMidnight(e,t){const n=new Intl.DateTimeFormat("en-GB",{timeZone:t,hour:"2-digit",minute:"2-digit",hour12:!1}).formatToParts(e);return 60*Number(n.find(e=>"hour"===e.type).value)+Number(n.find(e=>"minute"===e.type).value)}function isOffHours(e){return e<540||e>1020}function computeRows(e){const t=referenceDate(),n=(e||"").trim().toLowerCase(),r=members.filter(e=>!n||e.name.toLowerCase().includes(n)||e.role.toLowerCase().includes(n)||e.tz.toLowerCase().includes(n)).map(e=>{const n=minutesSinceMidnight(t,e.tz);return{...e,local:fmtTime(t,e.tz),offset:fmtOffset(t,e.tz),sortKey:n,off:isOffHours(n)}}).sort((e,t)=>e.sortKey-t.sortKey);return{date:t,rows:r}}function currentMode(){const e=document.querySelector('#timeboardModal input[name="refMode"]:checked');return e?.value||"now"}function render(){currentMode();const{date:e,rows:t}=computeRows($q.value);$rows.innerHTML=t.map(e=>`\n    <tr>\n      <td>${e.name}</td>\n      <td class="muted">${e.role}</td>\n      <td class="mono">${e.tz}</td>\n      <td class="mono ${e.off?"warn":""}">${e.local}</td>\n      <td class="mono">${e.offset}</td>\n    </tr>\n  `).join(""),$footNote.innerHTML="Times shown are each teammate's local time at the selected reference. Off-hours (before 9am / after 5pm) are subtly highlighted in red. DST is automatic."}let editingMemberIndex=-1;function openManageModal(){document.getElementById("timeboard-manageMembersModal").style.display="block",renderMembersList(),clearMemberForm()}function closeManageModal(){document.getElementById("timeboard-manageMembersModal").style.display="none",clearMemberForm(),editingMemberIndex=-1}function clearMemberForm(){document.getElementById("timeboard-memberName").value="",document.getElementById("timeboard-memberRole").value="",document.getElementById("timeboard-memberLocation").value="",document.getElementById("timeboard-memberTimezone").value="",document.getElementById("timeboard-saveMember").textContent="Save",editingMemberIndex=-1}function renderMembersList(){const e=document.getElementById("timeboard-membersList");e.innerHTML=members.map((e,t)=>`\n    <div class="member-item">\n      <div class="member-info">\n        <div class="member-name">${e.name}</div>\n        <div class="member-details">${e.role} • ${e.tz}</div>\n      </div>\n      <div class="member-actions">\n        <button class="btn btn-secondary btn-small edit-member-btn" data-index="${t}">✏️</button>\n        <button class="btn btn-danger btn-small delete-member-btn" data-index="${t}">🗑️</button>\n      </div>\n    </div>\n  `).join(""),e.querySelectorAll(".edit-member-btn").forEach(e=>{e.addEventListener("click",e=>{editMember(parseInt(e.target.dataset.index))})}),e.querySelectorAll(".delete-member-btn").forEach(e=>{e.addEventListener("click",e=>{deleteMember(parseInt(e.target.dataset.index))})})}function editMember(e){const t=members[e];document.getElementById("timeboard-memberName").value=t.name,document.getElementById("timeboard-memberRole").value=t.role,document.getElementById("timeboard-memberLocation").value=t.location,document.getElementById("timeboard-memberTimezone").value=t.tz,document.getElementById("timeboard-saveMember").textContent="Update",editingMemberIndex=e}async function deleteMember(e){if(confirm(`Delete ${members[e].name}?`)){members.splice(e,1),await saveMembers(),renderMembersList();const t=uniqueTzs();$refTz.innerHTML=t.map(e=>`<option value="${e}">${e}</option>`).join("");const n="America/New_York";$refTz.value=t.includes(n)?n:t[0],render()}}async function saveMember(){const e=document.getElementById("timeboard-memberName").value.trim(),t=document.getElementById("timeboard-memberRole").value.trim(),n=document.getElementById("timeboard-memberLocation").value.trim(),r=document.getElementById("timeboard-memberTimezone").value;if(!(e&&t&&n&&r))return void alert("Please fill in all fields");const o={name:e,role:t,location:n,tz:r};editingMemberIndex>=0?members[editingMemberIndex]=o:members.push(o),await saveMembers(),renderMembersList(),clearMemberForm();const m=uniqueTzs();$refTz.innerHTML=m.map(e=>`<option value="${e}">${e}</option>`).join("");const a="America/New_York";$refTz.value=m.includes(a)?a:m[0],render()}let timeboardInterval=null;function initializeTimeboardEvents(){$q&&$refHour&&$refTz&&(document.querySelectorAll('#timeboardModal input[name="refMode"]').forEach(e=>e.addEventListener("change",render)),$q.addEventListener("input",render),$refHour.addEventListener("change",()=>{"ref"===currentMode()&&render()}),$refTz.addEventListener("change",()=>{"ref"===currentMode()&&render()}),timeboardInterval=setInterval(()=>{"now"===currentMode()&&render()},6e4),document.getElementById("timeboard-manageMembersBtn")?.addEventListener("click",openManageModal),document.getElementById("timeboard-closeModal")?.addEventListener("click",closeManageModal),document.getElementById("timeboard-cancelEdit")?.addEventListener("click",clearMemberForm),document.getElementById("timeboard-saveMember")?.addEventListener("click",saveMember),document.getElementById("timeboard-manageMembersModal")?.addEventListener("click",function(e){e.target===this&&closeManageModal()}))}function cleanupTimeboardEvents(){timeboardInterval&&(clearInterval(timeboardInterval),timeboardInterval=null)}async function initializeTimeboard(){await loadMembers();const e=uniqueTzs();if($refTz){$refTz.innerHTML=e.map(e=>`<option value="${e}">${e}</option>`).join("");const t="America/New_York";$refTz.value=e.includes(t)?t:e[0]}render(),initializeTimeboardEvents()}"undefined"!=typeof window&&(window.initializeTimeboard=initializeTimeboard,window.cleanupTimeboardEvents=cleanupTimeboardEvents);